Latex:1

# Catalogue 1 Prog C Olivier BOUILLOT

*[group=erreur_de_syntaxe] Le fichier.c suivant contient potentiellement des erreurs de syntaxes. : 


    #include <stdio.h>

    int main(void){

        printf("Hello, world!);

        return 0

    }

Combien y en a t'il ?

- 0
- 1
+ 2
- 3

*[group=erreur_de_syntaxe] Le fichier.c suivant contient potentiellement des erreurs de syntaxes. : 


    #include <stdio.h>

    int main(void){

        printf("Hello, world!");

        return 0

    }

Combien y en a t'il ?

- 0
+ 1
- 2
- 3

*[group=erreur_de_syntaxe] Le fichier.c suivant contient potentiellement des erreurs de syntaxes. : 


    #include <stdio.h>

    int main(void){

        printf("Hello, world!");

        return 0;

    }

Combien y en a t'il ?

+ 0
- 1
- 2
- 3

*[group=erreur_de_syntaxe] Le fichier.c suivant contient potentiellement des erreurs de syntaxes. : 


    include <stdio.h>

    int main(void){

        printf("Hello, world!");

        return 0

    }

Combien y en a t'il ?

- 0
+ 1
- 2
- 3

**[group=separateur] Quels sont les séparateurs dans un programme écrit en C ?

+ les espaces
+ les tabulations
+ les retours à la ligne
- les virgules
- les points virgules 

**[group=indentation] L'indentation d'un programme C ...

- ...permet au compilateur de reconnaitre les blocs
- ...est nécessaire pour l'éditeur de texte
+ ...aide à la lisibilité
- ...peut remplacer les accolades
- ...évite d'utiliser des ;

*[group=commentaire] Comment doivent être écrits les commentaires en C pour passer la norme ansi ?

- # ....
- // .... //
+ /* .....*/
- <! ... >

*[group=passage_a_la_ligne] Quel est le caractère permettant d'afficher un retour à la ligne en C ?

+ \n
- \t
- \r
- \c
- ;

*[group=affichage_Sortie_Standard] Quelle est l'instruction permettant d'afficher à l'écran une chaine de caractères en C ?

- print
- scanf
- println
+ printf

*[group=utilite_points_virgules] A quoi servent les points virgules en C ?

- À différencier du premier coup d'oeil un code écris en C et en Python
+ À indiquer au compilateur la fin d'une instruction simple 
- À indiquer au compilateur qu'il va lui falloir lire une nouvelle ligne

**[group=Compilation] Quelle(s) ligne(s) de commande permet(tent) de compiler le programme HelloWorld.c 
en un executable HelloWorld ?

+ gcc HelloWorld.c -o HelloWorld
+ gcc -ansi HelloWorld.c -o HelloWorld
- gcc -Ansi HelloWorld.c HelloWorld
- gcc -Ansi HelloWorld.c -o HelloWorld
- gcc -ansi -Wall HelloWorld.c HelloWorld
+ gcc -ansi -Wall HelloWorld.c -o HelloWorld
- gcc -ansi -wall HelloWorld.c HelloWorld 
- aucune de ces réponses

**[group=Compilation] Quelle(s) ligne(s) de commande permet(tent) de compiler le programme HelloWorld.c 
en un executable HelloWorld ?

- gcc HelloWorld.c HelloWorld
+ gcc HelloWorld.c -o HelloWorld
- gcc -Ansi HelloWorld.c -o HelloWorld
- gcc -ansi -Wall HelloWorld.c HelloWorld
- gcc -ansi -wall HelloWorld.c -o HelloWorld
- gcc -Ansi -Wall HelloWorld.c HelloWorld
- gcc -Ansi -wall HelloWorld.c -o HelloWorld
- aucune de ces réponses

**[group=Compilation] Quelle(s) ligne(s) de commande permet(tent) de compiler le programme HelloWorld.c 
en un executable HelloWorld ?

- gcc HelloWorld.c HelloWorld
- gcc -ansi HelloWorld.c HelloWorld
- gcc -Ansi HelloWorld.c HelloWorld
- gcc -Ansi HelloWorld.c -o HelloWorld
- gcc -ansi -wall HelloWorld.c -o HelloWorld
- gcc -Ansi -Wall HelloWorld.c -o HelloWorld
- gcc -Ansi -wall HelloWorld.c -o HelloWorld
+ aucune de ces réponse

**[group=Warning_floattant] On dispose de deux variables a et b. Dans quels cas,lors de l'exécution d'un 
programme calcul.c, peut-on constater que a + b == a ?

- Cela ne peut jamais arriver.
+ Lorsque b est nul.
- Lorsque a et b sont des entiers, cela arrive tout le temps.
- Lorsque a et b sont des flottants, cela arrive tout le temps.
- Aucune de ces réponses n'est correcte.

**[group=Warning_floattant] On dispose de deux variables a et b. Dans quels cas,lors de l'exécution d'un 
programme calcul.c, peut-on constater que a + b == a ?

- Lorsque a et b sont des entiers, cela arrive tout le temps.
- Lorsque a et b sont des floottants, cela arrive tout le temps.
+ Lorsque a et b sont des entiers, cela peut arriver.
+ Lorsque a et b sont des floottants, cela peut arriver.
- Aucune de ces réponses n'est correcte.

**[group=Division] Que vaut 3/2 en C ?

+ 1
- 1.
- 1.5
- 1.0
- On ne sait pas

**[group=Division] Que vaut 3./2 en C ?

- 1
- 1.
+ 1.5
- 1.0
- On ne sait pas

**[group=Division] Que vaut 3/2. en C ?

- 1
- 1.
+ 1.5
- 1.0
- On ne sait pas

**[group=Division] On considère les instructions suivantes :


    x = 3;

    y = 2;

Que vaut x/y ?

- 1
- 1.
- 1.5
- 1.0
+ On ne sait pas

*[group=adresse] Comment récupère t-on l'adresse d'une variable x ?

- x
+ &x
- !x
- %x
- *x

**[group=Sans_Effet_de_bords] Parmi le code suivant, un certain nombre d'instructions ne modifient pas les 
variables locales du programme.


    /*1*/ #include <stdio.h>

    /*2*/

    /*3*/ int main(void){

    /*4*/   int a = 2, b = 3;

    /*5*/   int somme;

    /*6*/   float moyenne;

    /*7*/   somme = a + b;

    /*8*/   printf("La somme vaut %f", a + b);

    /*9*/   moyenne = (a + b) / 2.;

    /*10*/  a + b;

    /*11*/  printf("La moyenne vaut %f", moyenne);

    /*12*/ }

Quelles sont-elles ?

- 1
- 7
+ 8
+ 10
+ 11
- Aucune des ces lignes

**[group=Sans_Effet_de_bords] Parmi le code suivant, un certain nombre d'instructions ne modifient pas les 
variables locales du programme.


    /*1*/ #include <stdio.h>

    /*2*/

    /*3*/ int main(void){

    /*4*/   int a = 2, b = 3;

    /*5*/   int somme;

    /*6*/   float moyenne;

    /*7*/   (a + b) / 2.;

    /*8*/   somme = a + b;

    /*9*/   printf("La somme vaut %f", a + b);

    /*10*/  moyenne = (a + b) / 2.;

    /*11*/  printf("La moyenne vaut %f", moyenne);

    /*12*/ }

Quelles sont-elles ?

- 1
+ 7
+ 9
- 10
+ 11
- Aucune des ces lignes

**[group=Sans_Effet_de_bords] Parmi le code suivant, un certain nombre d'instructions ne modifient pas les 
variables locales du programme.


    /*1*/ #include <stdio.h>

    /*2*/

    /*3*/ int main(void){

    /*4*/   int a = 2, b = 3;

    /*5*/   int somme;

    /*6*/   float moyenne;

    /*7*/   somme = a + b;

    /*8*/   printf("La somme vaut %f", a + b);

    /*9*/   moyenne = (a + b) / 2.;

    /*10*/  printf("La moyenne vaut %f", moyenne);

    /*11*/ }

Quelles sont-elles ?

- 7
+ 8
+ 10
- 1
- Aucune des ces lignes
- 11

**[group=Sans_Effet_de_bords] Parmi le code suivant, un certain nombre d'instructions ne modifient pas les 
variables locales du programme.


    /*1*/ #include <stdio.h>

    /*2*/

    /*3*/ int main(void){

    /*4*/   int a = 2, b = 3;

    /*5*/   int somme;

    /*6*/   float moyenne;

    /*7*/   (a + b) / 2.;

    /*8*/   somme = a + b;

    /*9*/   printf("La somme vaut %f", a + b);

    /*10*/  moyenne = (a + b) / 2.;

    /*11*/  a + b;

    /*12*/  printf("La moyenne vaut %f", moyenne);

    /*13*/ }

Quelles sont-elles ?

+ 7
- 10
- 1
- Aucune des ces lignes
+ 11

**[group=Compilation_2] Parmi le code suivant, un certain nombre de lignes provoque une erreur ou un warning à 
la compilation. Lesquelles ?


    /*1*/ #include <stdio.h>

    /*2*/

    /*3*/ int main(void){

    /*4*/   int a;

    /*5*/   printf("Donnez moi un entier : ");

    /*6*/   scanf("%d", &a);

    /*7*/   print("Son carré vaut %d",a * a);

    /*8*/ }

Quelles sont-elles ?

- 4
- 5
- 6
+ 7
- 8
- Aucune ne provoque d'erreur ou de warning

**[group=Compilation_2] Parmi le code suivant, un certain nombre de lignes provoque une erreur ou un warning à 
la compilation. Lesquelles ?


    /*1*/ #include <stdio.h>

    /*2*/

    /*3*/ int main(void){

    /*4*/   int a;

    /*5*/   printf("Donnez moi un entier : ");

    /*6*/   scanf("%d", a);

    /*7*/   print("Son carré vaut %d",a * a);

    /*8*/ }

Quelles sont-elles ?

- 4
- 5
+ 6
+ 7
- 8
- Aucune ne provoque d'erreur ou de warning

**[group=Compilation_2] Parmi le code suivant, un certain nombre de lignes provoque une erreur ou un warning à 
la compilation. Lesquelles ?


    /*1*/ #include <stdio.h>

    /*2*/

    /*3*/ int main(void){

    /*4*/   int a

    /*5*/   printf("Donnez moi un entier : ");

    /*6*/   scanf("%d", &a);

    /*7*/   print("Son carré vaut %d",a * a);

    /*8*/ }

Quelles sont-elles ?

+ 4
- 5
- 6
+ 7
- 8
- Aucune ne provoque d'erreur ou de warning

**[group=Compilation_2] Parmi le code suivant, un certain nombre de lignes provoque une erreur ou un warning à 
la compilation. Lesquelles ?


    /*1*/ #include <stdio.h>

    /*2*/

    /*3*/ int main(void){

    /*4*/   int a;

    /*5*/   print("Donnez moi un entier : ");

    /*6*/   scanf("%d", a);

    /*7*/   printf("Son carré vaut %d",a * a);

    /*8*/ }

Quelles sont-elles ?

- 4
+ 5
+ 6
- 7
- 8
- Aucune ne provoque d'erreur ou de warning

**[group=Compilation_2] Parmi le code suivant, un certain nombre de lignes provoque une erreur ou un warning à 
la compilation. Lesquelles ?


    /*1*/ #include <stdio.h>

    /*2*/

    /*3*/ int main(void){

    /*4*/   int a;

    /*5*/   print("Donnez moi un entier : ");

    /*6*/   scanf("%d", &a);

    /*7*/   printf("Son carré vaut %f",a * a);

    /*8*/ }

Quelles sont-elles ?

- 4
+ 5
- 6
+ 7
- 8
- Aucune ne provoque d'erreur ou de warning

**[group=Resultat_code] Qu'affiche le programme suivant ?


     #include <stdio.h>

     int main(void){

        int j;

        float z;

        j = 5;

        z = J / 2;

        printf("%f \n", z);

        return 0;

     }

+ 2.0
- 2
- 2.5
- Une erreur ou un warning

**[group=Resultat_code] Qu'affiche le programme suivant ?


     #include <stdio.h>

     int main(void){

        int j;

        int z;

        j = 5;

        z = J / 2;

        printf("%f \n", z);

        return 0;

     }

- 2.0
- 2
- 2.5
+ Une erreur ou un warning

**[group=Resultat_code] Qu'affiche le programme suivant ?


     #include <stdio.h>

     int main(void){

        float j;

        float z;

        j = 5;

        z = J / 2;

        printf("%f \n", z);

        return 0;

     }

- 2.0
- 2
+ 2.5
- Une erreur ou un warning

**[group=Resultat_code] Qu'affiche le programme suivant ?


     #include <stdio.h>

     int main(void){

        float j;

        int z;

        j = 5;

        z = J / 2;

        printf("%f \n", z);

        return 0;

     }

- 2.0
- 2
- 2.5
+ Une erreur ou un warning

*[group=Resultat_code_If] Qu'affiche le programme suivant si l'utilisateur entre 3 et 42 ?


     #include <stdio.h>

     int main(void){

        int a,b;

        printf("entrez deux entiers : ");

        scanf("%d %d", &a, &b);

        if (a<b)

            if (b%2==0)

                printf("toto");
            
            else

                printf("titi");

        else

            printf("tutu");

        printf("\n");

     }

+ toto
- titi
- tutu
- tototutu
- tititutu
- une ligne vide

*[group=Resultat_code_If] Qu'affiche le programme suivant si l'utilisateur entre 18 et 4 ?


     #include <stdio.h>

     int main(void){

        int a,b;

        printf("entrez deux entiers : ");

        scanf("%d %d", &a, &b);

        if (a<b)

            if (b%2==0)

                printf("toto");

                printf("titi");
            
            else

                printf("tutu");

        printf("\n");

     }

- toto
- titi
- tutu
- tototutu
- tititutu
+ une ligne vide

*[group=Resultat_code_If] Qu'affiche le programme suivant si l'utilisateur entre 14 et 6 ?


     #include <stdio.h>

     int main(void){

        int a,b;

        printf("entrez deux entiers : ");

        scanf("%d %d", &a, &b);

        if (a<b) {

            if (b%2==0)

                printf("toto");

        } else

            printf("titi");

        printf("tutu");

        printf("\n");
        
     }

- toto
- titi
- tutu
- tototutu
+ tititutu
- une ligne vide

*[group=Resultat_code_If] Qu'affiche le programme suivant si l'utilisateur entre 3 et 42 ?


     #include <stdio.h>

     int main(void){

        int a,b;

        printf("entrez deux entiers : ");

        scanf("%d %d", &a, &b);

        if (a<b) {

            if (b%2==0)

                printf("toto");

        } else

            printf("titi");

        printf("tutu");

        printf("\n");
        
     }

- toto
- titi
- tutu
+ tototutu
- tititutu
- une ligne vide

*[group=Equation_Second_Degre] Un programme permettant de déterminer le nombre de racines d'une équation du 
second degré ax&sup2; + bx + c = 0 doit contenir au minimum...

- 3 tests
- 6 tests
+ 5 tests

# Catalogue 2 Prog C Olivier BOUILLOT sans les doublons du Catalogue 1

**[group=Changement_valeur_variable] Comment peut-on changer la valeur d’une variable à l’aide d’une fonction ?

+ En passant l’adresse de la variable en question en argument de la fonction.
- En passant la variable en question en argument de la fonction.
+ En passant la variable en question ainsi que son adresse en argument de la fonction.
- On ne peut pas faire cela en C.

**[group=Echange_de_variable] Parmi les fonctions suivantes, quelles sont celles qui réalisent un échange des variables
 passées en paramètres ?


     /* Fonction 1 */

     void echange(int* a, int* b){

        int tmp = *a;

         *a = *b;

         *b = tmp;} 


     /* Fonction 2 */

     void echange(int a, int b){

         int tmp = a;

         a = b;

         b = tmp;}


     /* Fonction 3 */

     void echange(int* a, int* b){

         int tmp = &a;

         &a = &b;

         &b = tmp;}  


     /* Fonction 4 */

     void echange(int* a, int* b){

         int* tmp;

         tmp = a;

         *a = *b;

         *b = *tmp;} 


     /* Fonction 5 */

     void echange(int* a, int* b){

         int* tmp = &a;

         &a = &b;

         &b = &tmp;}

+ Fonction 1
- Fonction 2
- Fonction 3
+ Fonction 4
- Fonction 5 

**[group=Declaration_de_variable] Considérons le programme suivant :


    /*01*/ #include <stdio.h>

    /*02*/

    /*03*/ void echange(int* a, int* b){

    /*04*/    int tmp = *a;

    /*05*/    *a = *b;

    /*06*/    *b = tmp;

    /*07*/ }

    /*08*/

    /*09*/ int main(void){

    /*10*/    int a, b;

    /*11*/    printf("Donnez moi deux entiers, svp : ");

    /*12*/    scanf("%d%d", &a, &b);

    /*13*/    printf("Avant l’appel de la fonction echange, a et b valent : %d et %d\n",a, b);

    /*14*/    echange(&a, &b);

    /*15*/    printf("Après l’appel de la fonction echange, a et b valent : %d et %d\n",a, b);

    /*16*/ }

Parmi les affirmations suivantes, lesquelles sont exactes ?

- La fonction echange prend des entiers en paramètres
+ La fonction echange prend des adresses en paramètres
- La fonction scanf prend une chaine de caractères, puis une ou des variables de type int en paramètres
+ La fonction scanf prend une chaine de caractères, puis des adresses en paramètres
+ La ligne 14 ne provoque pas d’erreur de compilation.
- La ligne 14 provoque une erreur de compilation.

*[group=Comprehension_de_code] Quel est le rendu lors de l’exécution du programme suivant ?


     #include <stdio.h>

     int main(void){

         int i;

         int n = 5;

         for(i =0; i < n ; i = i + 1){

             printf("%d\t", i);

             if (i % 2 == 0)

                printf("\n %d", i);

         }

    }

     Proposition 1 :             Proposition 2 :             Proposition 3 : 

        0  1  2  3  4               0                           0  0

        0  2  4                     0  1  2                     1  2  2

                                    2  3  4                     3  4

                                    4  5


                 Proposition 4 :             Propositon 5 : 

                    0                           0  0

                    0  1  2                     1  2  2

                    2  3  4                     3  4  4

                    4

- Proposition 1
- Proposition 2
- Proposition 3
+ Proposition 4
- Proposition 5

*[group=Comprehension_de_code] Quel est le rendu lors de l’exécution du programme suivant ?


     #include <stdio.h>

        int main(void){

            int i;

            int n = 5;

            for (i = 0; i < n/2; i=i+1) {

                if (i * i > n)

                    printf("%d ", i);

            }

        }

+ Le programme n’affiche rien
- 2
- 1  2 
- 0  1  2
- 0  1
- 1

*[group=Comprehension_de_code] Quel est le rendu lors de l’exécution du programme suivant ?


     #include <stdio.h>

        int main(void){

            int i;

            int n = 5;

            for (i = 0; i < n/2; i=i+1) {

                if (i * i <= n)

                    printf("%d ", i);

            }

        }

- Le programme n’affiche rien
- 2
- 1  2 
- 0  1  2
+ 0  1
- 1

*[group=Comprehension_de_code] Quel est le rendu lors de l’exécution du programme suivant ?


     #include <stdio.h>

        int main(void){

            int i;

            int n = 4;

            for (i = 0; i < n/2; i=i+1) {

                if (i * i >= n)

                    printf("%d ", i);

            }

        }

+ Le programme n’affiche rien
- 2
- 1  2 
- 0  1  2
- 0  1
- 1

*[group=erreur_de_syntaxe] Le fichier.c suivant contient potentiellement des erreurs de syntaxes.


     #include <stdio.h>

        int main(void){

            int i;

            for (i = 0; i < 3; i=i+1)

                printf("%d ", i);

            return 0 

        }

Combien y en a t-il ?

- 0
+ 1
- 2
- 3

*[group=erreur_de_syntaxe] Le fichier.c suivant contient potentiellement des erreurs de syntaxes.


     #include <stdio.h>

        int main(void){

            int i;

            for (i = 0; i == 3; i+=1)

                printf("%d ", i);

            return 0 

        }

- 0
- 1
+ 2
- 3







