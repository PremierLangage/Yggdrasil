#*****************************************************************************
#  Copyright (C) 2020 Nicolas Borie <nicolas dot borie at univ-eiffel . fr>
#
#  Distributed under the terms of Creative Commons Attribution-ShareAlike 3.0
#  Creative Commons CC-by-SA 3.0
#
#    This code is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  The full text of the CC-By-SA 3.0 is available at:
#
#            https://creativecommons.org/licenses/by-sa/3.0/
#            https://creativecommons.org/licenses/by-sa/3.0/fr/
#*****************************************************************************

# Ceci est un fichier de questions de type QCM au format AMX.txt
# Les questions portent sur les types en langage C


** Dans quelles circonstances définit-on une structure C de type **struct** ?
+ Pour regrouper simultanément pleins d'informations dans une même entité.
- Pour unifier une donnée pouvant vivre alternativement dans un nombre fini de types identifiés.
- Pour créer une entité unique se déclinant en des objects de nature différente.
- Pour modéliser des variables prenant un nombre fini de valeurs possibles.
- Pour stocker de manière contiguë plusieurs variables de même type.
- Pour rajouter de la sémantique dans le code source évitant d'utiliser des petites valeurs entières directement.


** Dans quelles circonstances définit-on une structure C de type **enum** ?
+ Pour modéliser des variables prenant un nombre fini de valeurs possibles.
+ Pour rajouter de la sémantique dans le code source évitant d'utiliser des petites valeurs entières directement.
- Pour unifier une donnée pouvant vivre alternativement dans un nombre fini de types identifiés.
- Pour créer une entité unique se déclinant en des objects de nature différente.
- Pour regrouper simultanément pleins d'informations dans une même entité.
- Pour stocker de manière contiguë plusieurs variables de même type.


** Dans quelles circonstances définit-on une structure C de type **union** ?
+ Pour unifier une donnée pouvant vivre alternativement dans un nombre fini de types identifiés.
+ Pour créer une entité unique se déclinant en des objects de nature différente.
- Pour regrouper simultanément pleins d'informations dans une même entité.
- Pour modéliser des variables prenant un nombre fini de valeurs possibles.
- Pour stocker de manière contiguë plusieurs variables de même type.
- Pour rajouter de la sémantique dans le code source évitant d'utiliser des petites valeurs entières directement.


** Quelles sont les particularités des structures C de type **struct** ?
+ Elles rassemblent en un tout unique plusieurs champs ayant chacun un autre type.
+ Leur taille mémoire vaut au moins la somme des tailles mémoires des types des différents champs.
+ Un champ peut lui même être une autre structure de type **struct**.
+ Une structure peut avoir pour champ un pointeur vers elle-même.
- Une structure peut avoir pour champ elle-même.
- Leur taille mémoire est la taille maximum des champs qui la composent.


** Quelles sont les particularités des structures C de type **union** ?
+ Le programmeur est responsable de savoir quel champ doit être utilisé ou pas.
+ Leur taille mémoire est la taille maximum des champs qui la composent.
- Leur taille mémoire vaut au moins la somme des tailles mémoires des types dans les différents champs.
- Lire un champ invalide peut provoquer une erreur de segmentation.


** Quelles sont les particularités des structures C de type **enum** ?
+ Leur taille sont celle des `int` du langage C.
+ Elles définissent des constantes plus explicites que des valeurs entières.
+ Elles permettent de définir de manière lisible un ensemble fini de valeurs.
- Les différentes valeurs sont stockées de manière contiguë dans une variable de type <b>enum</b>.


