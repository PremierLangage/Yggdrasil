#*****************************************************************************
#  Copyright (C) 2020 Nicolas Borie <nicolas dot borie at univ-eiffel . fr>
#
#  Distributed under the terms of Creative Commons Attribution-ShareAlike 3.0
#  Creative Commons CC-by-SA 3.0
#
#    This code is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  The full text of the CC-By-SA 3.0 is available at:
#
#            https://creativecommons.org/licenses/by-sa/3.0/
#            https://creativecommons.org/licenses/by-sa/3.0/fr/
#*****************************************************************************

# Ceci est un fichier de questions de type QCM au format AMX.txt
# Les questions portent sur les variables en langage C


** Selectionner les déclarations correctes à propos des variables locales en C.
+ On les déclare dans le corps d'une fonction.
+ Les variables locales ont leur emplacement mémoire sur la pile d'exécution.
+ Leurs utilisations se limitent à la fonction, voire au bloc, où elles sont définies.
+ Une fonction peut retourner la valeur d'une variable locale.
- L'utilisateur doit les libérer à l'aide de la fonction **free**.
- Elles sont visibles dans tout le fichier où elles ont été déclarées.
- Elles contiennent des zéros (ou NULL) quand on les déclarent sans les initialiser.


** Comment utiliser efficacement les variables en C ?
+ En C, on peut utiliser exactement la quantité de mémoire dont on a besoin.
+ Plus les noms de variables apportent du sens, moins le besoin de documentation se fait sentir.
+ Les variables locales, qui sont automatiques, donnent moins de travail au programmeur.
- Les noms de variable trop long ralentissent la compilation et les programmes.
- Les programmeurs C excellents n'utilisent presque plus de variables.
- Les algorithmes utilisant moins de variables sont plus rapides.


** Qu'est ce qui caractérise une variable en langage C ?
+ Un identificateur, le nom de la variable.
+ Un type.
+ Un emplacement mémoire (sur la pile ou le tas...).
+ Une valeur.
- Une couleur.
- Un statut, libérée ou allouée.
- Une méthode d'évaluation.
