#*****************************************************************************
#  Copyright (C) 2019 Nicolas Borie <nicolas dot borie at univ-eiffel . fr>
#
#  Distributed under the terms of Creative Commons Attribution-ShareAlike 3.0
#  Creative Commons CC-by-SA 3.0
#
#    This code is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  The full text of the CC-By-SA 3.0 is available at:
#
#            https://creativecommons.org/licenses/by-sa/3.0/
#            https://creativecommons.org/licenses/by-sa/3.0/fr/
#*****************************************************************************

# Ceci est un fichier de questions de type QCM au format AMX.txt
# Les questions portent sur des généralités à propos du langage C


** Selectionner les déclarations correctes à propos du code source C.
- Les blocs C s'identifient en allant à la ligne et en rajoutant 4 espaces.
- Les compilateurs limitent à 4 la profondeur des blocs imbriqués.
+ On peut imbriquer les bloc les uns dans les autres.
+ Les instructions se terminent par le caractère **;**
+ Pour définir une fonction, on ouvre une accolade à la suite de son prototype.
+ Quand on a plus d'une instruction, il faut mettre des accolades <br /> autour des blocs.


** Selectionner les lignes déclarant une variable entière C.
+ int i;
+ int j;
+ int string;
- int 23;
- char* "Paul";
- float compteur;
- float* entier;


** Selectionner les déclarations justes.
+ Les fonctions d'un programme C peuvent s'appeler elle-même.
+ Une fonction jamais utilisée peut être otée des sources pour donner le même programme.
+ Une fonction C a toujours un type de retour, possiblement void pour signifier rien.
- Deux fonctions peuvent porter le même nom si elles n'utilise pas les mêmes arguments.
- Une fonction ne peut être appelée qu'une seule fois dans un programme.


** Combien de fonction *main* contient un programme C ?
+ Une et une seule.
- Possiblement aucune.
- Autant que possible.
- Deux, une version sans argument et une autre version avec.


** Selectionner les déclarations correctes à propos des sources C et exécutables.
+ Un programme C peut exister sous forme de sources et d'exécutable.
+ Les sources ont besoin d'être compilées pour être utilisées.
- On peut obtenir les sources à partir de l'exécutable.
- Les sources sont des fichiers binaires non lisibles par un humain.
- Un ordinateur exploite les sources directement via un interprèteur.


** Selectionner les déclarations correctes.
+ L'indentation en C est très importante car on peut mettre des espaces, des tabulations et des retours à la ligne un peu partout.
+ Un programme C est une collection de fonctions qui s'articulent autour d'un main.
- Un programme C est composé de classes modélisant des objets.
- Le langage C est un langage fonctionnel.
- Le langage C utilise principalement des balises ouvrantes et fermantes.
- On ne peut pas faire de programme C sans commencer par inclure <stdio.h>.


** Selectionner les déclarations correctes à propos de l'utilisation du C.
+ La quasi totalité des systèmes d'explitation sont écrit en C.
+ Beaucoup de calculs haute performance sont fait en C.
+ Le langage C est réputé pour produire des programmes efficaces.
- Le langage C est omniprésent pour faire des sites web.
- Le langage C ne peut pas utiliser plus de 50% des capacités d'un ordinateur.
- Le langage C est pratique pour dévelloper des applications mobiles.
- Uniquement les machines sous Linux peuvent exécuter les programmes C.


** Selectionner les déclarations correctes à propos des variables en C.
+ Un programme C peut utiliser autant de variables que possible si la mémoire est suffisante.
+ Deux variables locales peuvent porter le même nom si elle ne sont pas dans les mêmes fonctions.
- Un programme C ne peut pas utiliser plus de 1024 variables.
- Un programme C exploite toujours exactement deux variables : *argc* et *argv*.
- Certaines variables n'ont pas de type, ce dernier est déterminé par le compilateur.



