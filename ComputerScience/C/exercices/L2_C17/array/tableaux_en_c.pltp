#*****************************************************************************
#  Copyright (C) 2021 Nicolas Borie <nicolas dot borie at univ-eiffel . fr>
#
#  Distributed under the terms of Creative Commons Attribution-ShareAlike 3.0
#  Creative Commons CC-by-SA 3.0
#
#    This code is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  The full text of the CC-By-SA 3.0 is available at:
#
#            https://creativecommons.org/licenses/by-sa/3.0/
#            https://creativecommons.org/licenses/by-sa/3.0/fr/
#*****************************************************************************

author=Prog C L2 Team

title=Les tableaux en C

introduction==
Voici quelques exercices manipulant des tableaux. Les exercices sont à peu près 
triés en difficulté croissante. Les exercices de fin de fiche proposent la 
manipulation de tableaux de dimensions supérieures.


S'il y a une chose à retenir sur les tableaux en C, c'est bien d'être extrêmement 
attentif aux accès mémoires (lecture et écriture). Autant Python prévoit un 
mécanisme d’exception avec les fameuses `IndexError` qui correspondent à des accès 
invalides, le langage C ne prévoit rien en cas d’erreur de programmation. Vérifier 
la validité des accès mémoires coûtent cher et comme le C veut que les programmes 
soient les plus performants, lors d’accès mémoires invalides, soit les programmes 
adoptent des comportements imprévisibles (bugs potentiellement silencieux), soit 
le système protège l’ordinateur et tue le programme (erreur de segmentation).


En C, c’est au programmeur de contrôler tous les `[i]` opérés sur les tableaux 
et donc aussi de bien établir les débuts et les sorties des boucles.
==

@ /ComputerScience/C/exercices/L2_C17/array/max_array.pl
@ /ComputerScience/C/exercices/L2_C17/array/is_partial_sorted.pl
@ /ComputerScience/C/exercices/L2_C17/array/equal_array.pl
@ /ComputerScience/C/exercices/L2_C17/array/mean_positive.pl
@ /ComputerScience/C/exercices/L2_C17/array/miror.pl
@ /ComputerScience/C/exercices/L2_C17/array/shift_circular.pl
@ /ComputerScience/C/exercices/L2_C17/array/inversions.pl
@ /ComputerScience/C/exercices/L2_C17/array/diff_sym_sorted.pl
@ /ComputerScience/C/exercices/L2_C17/array/premiers.pl
@ /ComputerScience/C/exercices/L2_C17/array/tab2d.pl
@ /ComputerScience/C/exercices/L2_C17/array/fill_tab_3d.pl
@ /ComputerScience/C/exercices/L2_C17/array/max_index_3d.pl
