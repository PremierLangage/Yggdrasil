#*****************************************************************************
#  Copyright (C) 2019 Nicolas Borie <nicolas dot borie at univ-eiffel . fr>
#
#  Distributed under the terms of Creative Commons Attribution-ShareAlike 3.0
#  Creative Commons CC-by-SA 3.0
#
#    This code is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  The full text of the CC-By-SA 3.0 is available at:
#
#            https://creativecommons.org/licenses/by-sa/3.0/
#            https://creativecommons.org/licenses/by-sa/3.0/fr/
#*****************************************************************************

# Ceci est un fichier de questions de type QCM au format AMX.txt
# Les questions portent sur les types du langage C

** Quelle est la valeur maximale pouvant être prise par un **signed char** ?
+ 2 puissance 7 moins 1
+ 127
- 2 puissance 8 moins 1
- 255
- 256
- 2 puissance 8


** Sachant que la lettre a minuscule vaut 97 dans le code ASCII, combient vaut l'expression 'a' + 4 ?
+ 101
+ 'e'
- 100
- 'f'
- "a4"


** Quelle est la valeur maximale pouvant être prise par un **unsigned int** ?
+ 2 puissance 32 moins 1
+ de l'ordre de 4 milliards
- de l'ordre de 2 millions
- 2 puissance 31 moins 1
- 255 * 255 * 255 * 255 (4 octets quoi)
- 2 puissance 8


** Parmi les types suivants, lesquels modélisent des nombres entiers uniquement ?
+ signed int
+ unsigned long int
+ char
+ unsigned short
+ signed char
- float
- double


** Si `a` est un `unsigned int`, si `b` un `double` et si `c` un `long int`, quel sera le type de l'expression `a + b + c` ?
+ `double`
- `unsigned int`
- `long int`
- `unsigned double`


** Lequel des types de base C suivant pourrait contenir le plus grand nombre entier possible ?
+ `unsigned long int`
- `unsigned int`
- `long int`
- `unsigned short`
- `signed char`
- `char`


