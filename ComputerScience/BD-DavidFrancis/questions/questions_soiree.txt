1;La liste de tous les déguisements avec tous leurs attributs.;SELECT * FROM deguisement;False;False
1;La liste de toutes les personnes, avec tous leurs attributs.;SELECT * FROM personne;False;False
1;La liste de toutes les soirées, avec tous leurs attributs.;SELECT * FROM soiree;False;False
2;La liste des villes où il y a une soirée, sans doublons.;SELECT DISTINCT lieu FROM soiree;False;True
2;La liste des magasins de déguisements, sans doublons.;SELECT DISTINCT nommag FROM vendre;False;True
2;La liste des avatars représentés en soirée, sans doublons.;SELECT DISTINCT avatar FROM participe;False;True
3;La liste des modèles de déguisements qui sont disponibles en taille XS.;SELECT DISTINCT modele FROM vendre WHERE taille = 'XS';False;False
3;La liste des magasins qui vendent le costume bat5.;SELECT DISTINCT nommag FROM vendre WHERE modele = 'bat5';False;False
3;L'avatar représenté par le costume dar12.;SELECT avatar FROM deguisement WHERE modele = 'dar12';False;False
4;La liste des modèles de déguisements que l'on peut acheter pour moins de 24 euros.;SELECT DISTINCT modele FROM vendre WHERE prix < 24;False;False
4;La liste des soirées qui peuvent accueillir au moins 70 personnes.;SELECT * FROM soiree WHERE nbmax >= 70;False;False
4;La liste des personnes qui mesurent moins de 1m50.;SELECT * FROM personne WHERE taille < 150;False;False
5;La personne la plus jeune inscrite dans la base de données.;SELECT * FROM personne ORDER BY age LIMIT 1;False;True
5;La personne la plus âgée inscrite dans la base de données.;SELECT * FROM personne ORDER BY age DESC LIMIT 1;False;True
5;La personne la plus petite (en taille) inscrite dans la base de données.;SELECT * FROM personne ORDER BY taille LIMIT 1;False;True
5;La personne la plus grande (en taille) inscrite dans la base de données.;SELECT * FROM personne ORDER BY taille DESC LIMIT 1;False;True
6;La liste des personnes (surnom, nom, prenom, age) d'au moins 25 ans qui ont participé à une soirée déguisées en Daenerys.;SELECT DISTINCT surnom, nom, prenom, age FROM personne NATURAL JOIN participe WHERE avatar = 'Daenerys' AND age >= 25;False;False
6;La liste des magasins (nommag) qui vendent un costume de Anna en taille XS.;SELECT DISTINCT nommag FROM vendre NATURAL JOIN deguisement WHERE avatar = 'Anna' AND taille = 'XS';False;False
6;La liste des personnes (surnom) qui sont allées à une soirée à Paris en étant déguisées en Jon Snow.;SELECT DISTINCT surnom FROM participe NATURAL JOIN soiree WHERE lieu = 'Paris' AND avatar = 'Jon Snow';False;False
7;Les personnes (surnom, nom, prenom) qui ont organisé au moins une soirée à Marseille.;SELECT DISTINCT surnom, nom, prenom FROM personne JOIN soiree ON surnom = organisateur WHERE lieu = 'Marseille';False;False
7;Les personnes (surnom) qui participent à une soirée qu'elles ont elles-mêmes organisée.;SELECT DISTINCT surnom FROM soiree NATURAL JOIN participe WHERE organisateur = surnom;False;False
7;Les personnes (surnom, prenom, nom) qui sont allées à une soirée (idS) déguisées en un personnage portant leur prénom.;SELECT surnom, prenom, nom, idS FROM participe NATURAL JOIN personne WHERE prenom = avatar;False;False
8;Les personnes (surnom, nom, prenom) qui sont allées à une soirée sans porter de déguisement.;SELECT DISTINCT surnom, nom, prenom FROM personne NATURAL JOIN participe WHERE avatar IS NULL;False;False
8;Les soirées (idS, lieu, date) où au moins une personne ne porte pas de déguisement.;SELECT DISTINCT ids, lieu, date FROM soiree NATURAL JOIN participe WHERE avatar IS NULL;False;False
9;Les personnes (surnom, nom, prenom) qui se sont déguisées au moins une fois en Elsa et au moins une fois en Anna.;SELECT surnom, nom, prenom FROM participe NATURAL JOIN personne WHERE avatar = 'Elsa' INTERSECT SELECT surnom, nom, prenom FROM participe NATURAL JOIN personne WHERE avatar = 'Anna';False;False
9;Les personnes (surnom, nom, prenom) qui ont participé à la fois à une soirée à Marseille et à une soirée à Paris.;SELECT surnom, nom, prenom FROM personne NATURAL JOIN soiree NATURAL JOIN participe WHERE lieu = 'Marseille' INTERSECT SELECT surnom, nom, prenom FROM personne NATURAL JOIN soiree NATURAL JOIN participe WHERE lieu = 'Paris';False;False
9;Les déguisements (modele, avatar) qui sont vendus à la fois en taille XS et XL.;SELECT modele, avatar FROM vendre NATURAL JOIN deguisement WHERE taille = 'XS' INTERSECT SELECT modele, avatar FROM vendre NATURAL JOIN deguisement WHERE taille = 'XL';False;False
10;Les soirées (ids, lieu, date) dans lesquelles tout le monde porte un déguisement.;SELECT ids, lieu, date FROM soiree EXCEPT SELECT ids, lieu, date FROM soiree NATURAL JOIN participe WHERE avatar IS NULL;False;False
10;Les costumes (modele, avatar) que l'on ne trouve pas en taille XL.;SELECT modele, avatar FROM deguisement EXCEPT SELECT modele, avatar FROM deguisement NATURAL JOIN vendre WHERE taille = 'XL';False;False
10;Les soirées (ids, lieu, date) dans lesquelles personne n'est déguisé en Rey.;SELECT ids, lieu, date FROM soiree EXCEPT SELECT ids, lieu, date FROM soiree NATURAL JOIN participe WHERE avatar='Rey';False;False
10;Les magasins (nommag) qui ne vendent pas de costume de Anna.;SELECT nommag FROM vendre EXCEPT SELECT nommag FROM vendre NATURAL JOIN deguisement WHERE avatar = 'Anna';False;False
11;Le prix le plus bas d'un costume de vampire.;SELECT min(prix) FROM vendre NATURAL JOIN deguisement WHERE avatar = 'vampire';False;False
11;Le prix le plus haut d'un costume de Batgirl.;SELECT max(prix) FROM vendre NATURAL JOIN deguisement WHERE avatar = 'Batgirl';False;False
11;Le nombre de personnes qui se sont déguisées au moins une fois en Batman.;SELECT count(distinct surnom) FROM participe WHERE avatar = 'Batman';False;False
11;Le prix d'entrée moyen des soirées organisées à Tours.;SELECT avg(entree) FROM soiree WHERE lieu = 'Tours';False;False
12;La liste des villes où ont été organisées des soirées, avec pour chacune le nombre de soirées qui y ont eu lieu, triée par nombre de soirées décroissant.;SELECT lieu, count(*) FROM soiree GROUP BY lieu ORDER BY count(*) DESC;True;False
12;Le nombre de participants de chaque âge. La liste devra être ordonnée par âges croissants.;SELECT age, count(*) FROM personne GROUP BY age ORDER BY age;True;False
12;Le nombre de participants de chaque taille. La liste devra être ordonnée par tailles croissantes.;SELECT taille, count(*) FROM personne GROUP BY taille ORDER BY taille;True;False
13;La liste des personnes (surnom, prenom) qui sont allées à au moins vingt soirées, triée par nombre de soirées décroissant.;SELECT surnom, prenom, count(*) FROM participe NATURAL JOIN personne GROUP BY surnom, prenom HAVING count(*) >= 20 ORDER BY count(*) DESC;True;False
13;La liste des soirées (ids, lieu, date) qui ont eu au moins 100 participants, triée par nombre de participants décroissant.;SELECT ids, lieu, date, count(*) FROM participe NATURAL JOIN soiree GROUP BY ids, lieu, date HAVING count(*) >= 100 ORDER BY count(*) DESC;True;False
13;Les soirées (ids, lieu, date) qui ont rempli au moins 90% des places disponibles.;SELECT ids, lieu, date FROM soiree NATURAL JOIN participe GROUP BY ids, lieu, date HAVING count(*) >= 0.9*nbmax;False;False
14;La liste de toutes les soirées (ids, lieu, date) avec pour chacune la recette totale des entrées, triée par recette décroissante.;SELECT ids, lieu, date, sum(entree) FROM participe NATURAL JOIN soiree GROUP BY ids, lieu, date ORDER BY sum(entree) DESC;True;False
14;La liste de toutes les personnes (surnom, nom, prenom) avec pour chacune la somme dépensée en entrées à des soirées, triée par somme décroissante.;SELECT surnom, nom, prenom, sum(entree) FROM participe NATURAL JOIN personne NATURAL JOIN soiree GROUP BY surnom, nom, prenom ORDER BY sum(entree) DESC;True;False
15;La liste des avatars disponibles dans le commerce avec pour chacun le nom du magasin le moins cher pour l'acheter (quel que soit le modèle ou la taille).;SELECT avatar, nommag FROM vendre v1 NATURAL JOIN deguisement d1 WHERE prix = (SELECT min(prix) FROM vendre NATURAL JOIN deguisement WHERE avatar = d1.avatar);False;False
15;La liste des villes avec pour chacune le surnom de l'organisateur et la date de la dernière soirée qui y a eu lieu.;SELECT lieu, date, organisateur FROM soiree s1 WHERE date = (SELECT max(date) FROM soiree WHERE lieu = s1.lieu);False;False
16;La liste des soirées (ids, lieu, date), avec pour chacune le nombre total de participants, triée par nombre de participants décroissant.;SELECT ids, lieu, date, count(*) AS nbpart FROM participe NATURAL JOIN soiree GROUP BY idS, lieu;False;False
17;La liste des organisateurs de soirées (surnom), avec pour chacun le nombre de participants à sa soirée la plus fréquentée.;SELECT organisateur, max(nbpart) FROM ( SELECT organisateur, count(*) AS nbpart FROM soiree NATURAL JOIN participe GROUP BY ids, organisateur) AS tabsoipart GROUP BY organisateur;False;False
17;La liste des participants (surnom), avec pour chacun la fréquentation moyenne des soirées auxquelles il participe.;SELECT surnom, avg(nbpart) FROM participe NATURAL JOIN ( SELECT ids, count(*) AS nbpart FROM soiree NATURAL JOIN participe GROUP BY ids) AS tabsoipart GROUP BY surnom;False;False
18;La liste des participants (surnom, nom, prenom) qui vont uniquement à des soirées de forte affluence (au moins 70 participants).;SELECT surnom, nom, prenom FROM personne EXCEPT SELECT surnom, nom, prenom FROM personne NATURAL JOIN participe NATURAL JOIN ( SELECT ids, count(*) AS nbpart FROM soiree NATURAL JOIN participe GROUP BY ids) AS tabsoipart WHERE nbpart < 70;False;False
18;La liste des villes où sont uniquement organisées des soirées de faible affluence (au plus 30 participants).;SELECT lieu FROM soiree EXCEPT SELECT lieu FROM ( SELECT ids, lieu, count(*) AS nbpart FROM soiree NATURAL JOIN participe GROUP BY ids, lieu) AS tabsoipart WHERE nbpart > 30;False;False
19;La liste des organisateurs de soirées (surnom, nom, prenom), avec pour chacun la date et le lieu de la soirée qui lui a rapporté le plus d'argent.;SELECT organisateur, nom, prenom, date, lieu FROM soiree s JOIN personne ON s.organisateur = surnom WHERE ids = ( SELECT ids FROM soiree NATURAL JOIN participe WHERE organisateur = s.organisateur GROUP BY ids ORDER BY sum(entree) DESC LIMIT 1 );False;False
19;La liste des soirées (ids, lieu, date) à thème, c'est-à-dire où tous les participants portent le même avatar, avec pour chacune l'avatar en question.;SELECT DISTINCT ids, lieu, date, avatar FROM participe NATURAL JOIN soiree WHERE ids IN ( SELECT DISTINCT ids FROM soiree NATURAL JOIN participe GROUP BY ids HAVING count(distinct avatar) = 1 AND count(*) = count(avatar) );False;False
20;La liste des soirées (ids, lieu, date) où apparaissent tous les avatars qui sont disponibles dans au moins un magasin.;SELECT ids FROM soiree WHERE NOT EXISTS( SELECT avatar FROM deguisement NATURAL JOIN vendre WHERE NOT EXISTS( SELECT * FROM participe WHERE participe.avatar = deguisement.avatar AND participe.ids = soiree.ids ) );False;False


