#*****************************************************************************
#  Copyright (C) 2020 Nicolas Borie <nicolas dot borie at univ-eiffel . fr>
#
#  Distributed under the terms of Creative Commons Attribution-ShareAlike 3.0
#  Creative Commons CC-by-SA 3.0
#
#    This code is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  The full text of the CC-By-SA 3.0 is available at:
#
#            https://creativecommons.org/licenses/by-sa/3.0/
#            https://creativecommons.org/licenses/by-sa/3.0/fr/
#*****************************************************************************

author=Nicolas Borie
title=Mini Brain : premiers exercices

introduction==
Le Mini Brain est un simulateur virtuel de petit CPU possédant une Unité
Arithmétique et Logique pour nombres entiers sur 16 bits. Le procésseur 
possède 1 accumulateur et 5 registres numéroté de #0 à #4. Par commodité,
l'accumulateur a est aussi le registre de numéro #-1. 

Lorsque l'on allume le Mini Brain, par dáfault, les registres et 
l'accumulator contiennent tous la valeur zéro. Un programme est alors 
chargé dans la mémoire interne de Mini Brain. La première instruction à 
être exécutée (et donc la valeur originelle du compteur ordinal ou 
pointeur d'instruction) est l'instruction 1. Chaque ligne contient 
une instruction ou bien une valeur.

Voici un programme Mini Brain sur 13 lignes.
```
 1: ld 12 a
 2: ld $12 #4
 3: mv #4 #0
 4: st #1 $21
 5: inc a
 6: inc #4
 7: inc #$13
 8: dec #3
 9: dec #$13
10: inc #3
11: 
12: 12345
13: 2
```
L'exécution de ce programme dans le Mini Brain produit la verbose 
suivante.

|     #0     #1     #2     #3     #4 |  #-1=a | f | -->  PC : next instruction
|      0      0      0      0      0 |      0 | 0 | -->   1 : ld 12 a
|      0      0      0      0      0 |     12 | 0 | -->   2 : ld $12 #4
|      0      0      0      0  12345 |     12 | 0 | -->   3 : mv #4 #0
|  12345      0      0      0  12345 |     12 | 0 | -->   4 : st #1 $21
|  12345      0      0      0  12345 |     12 | 0 | -->   5 : inc a
|  12345      0      0      0  12345 |     13 | 0 | -->   6 : inc #4
|  12345      0      0      0  12346 |     13 | 0 | -->   7 : inc #$13
|  12346      0      0      0  12346 |     13 | 0 | -->   8 : dec #3
|  12346      0      0     -1  12346 |     13 | 0 | -->   9 : dec #$13
|  12345      0      0     -1  12346 |     13 | 0 | -->  10 : inc #3
|  12345      0      0      0  12346 |     13 | 1 | -->  11 : exit a
Process exited normally with code 13
0
==


@ /ComputerScience/Games/MiniBrain/mini_brain_add.pl

@ /ComputerScience/Games/MiniBrain/mini_brain_max_2_val.pl

@ /ComputerScience/Games/MiniBrain/mini_brain_sum_range.pl

@ /ComputerScience/Games/MiniBrain/mini_brain_factorial.pl


