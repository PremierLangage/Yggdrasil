extends = /ComputerScience/NSI/templates/pltest/pltest2023.pl


title= Méthode jouer

text==

Ecrire la méthode `jouer` de la classe `Jeu_de_la_vie` ayant deux paramètres:

- `nb` le nombre de tours à réaliser, et
- `delai` le délai à attendre entres deux tours.

Cette fonction réalise `nb` fois les actions suivantes:

- affiche le plateau
- réalise un tour du jeu de la vie
- attend le délai attendu en utilisant la fonction `sleep` du module `time`.

On pourra bien entendu utiliser les méthodes précédentes.

    >>> jeu = Jeu_de_la_vie(7, [(3, 4), (4, 4), (5, 4), (4, 3)]) #
    >>> jeu.jouer(100, 0.3)
    0000000
    0001110
    0000000
    0100001
    0100001
    0100001
    0001110

==

befor ==
import os
import time

class Cellule:
    def __init__(self, etat, i, j):
        self.vivant = etat
        self.futur = None
        self.i = i
        self.j = j

    def futur_etat(self, nb):
        if (not self.vivant) and nb == 3:
            self.futur = True
        elif self.vivant and nb >= 2 and nb <=3:
            self.futur = True
        else:
            self.futur = False

    def maj_etat(self):
        self.vivant = self.futur

class Jeu_de_la_vie:
    def __init__(self, taille, liste_vivantes):
        self.taille = taille
        self.plateau = [[Cellule(False, i, j) for j in range(taille)] for i in range(taille)]
        for i, j in liste_vivantes:
            self.plateau[i][j].vivant = True

    def voisines(self, cell):
        i, j = cell.i, cell.j
        lst = [(i - 1, j - 1), (i, j - 1), (i + 1, j - 1), (i - 1, j), (i + 1, j), (i - 1, j + 1), (i, j + 1), (i + 1, j + 1)]
        res = []
        for x, y in lst:
            if x >= 0 and x < self.taille and y >= 0 and y < self.taille:
                res.append(self.plateau[x][y])
        return res
    
    def nb_voisines(self, cellule):
        cpt = 0
        for cell in self.voisines(cellule):
            if cell.vivant:
                cpt += 1
        return cpt
    
    def tour(self):
        for ligne in self.plateau:
            for cellule in ligne:
                cellule.futur_etat(self.nb_voisines(cellule))
        for ligne in self.plateau:
            for cellule in ligne:
                cellule.maj_etat()
    
    def affiche(self):
        try:
            os.system('cls')
            os.system('clear')
        except:
            pass
        def remp(ligne):
            l =[]
            for cell in ligne:
                if cell.vivant:
                    l.append("1")
                else:
                    l.append("0")
            return l
        res = [ ''.join(remp(ligne)) for ligne in self.plateau]
        res = '\n'.join(res)
        print(res)
==


editor.code==

==

pltest==
>>> Jeu_de_la_vie.jouer = jouer #
>>> jeu = Jeu_de_la_vie(7, [(3, 4), (4, 4), (5, 4), (4, 3)]) #
>>> jeu.jouer(100,0.001) #
0000000
0000000
0000000
0000100
0001100
0000100
0000000
0000000
0000000
0000000
0001100
0001110
0001100
0000000
0000000
0000000
0000000
0001010
0010010
0001010
0000000
0000000
0000000
0000000
0000100
0011011
0000100
0000000
0000000
0000000
0000000
0001110
0001010
0001110
0000000
0000000
0000000
0000100
0001010
0010001
0001010
0000100
0000000
0000000
0000100
0001110
0011011
0001110
0000100
0000000
0000000
0001110
0010001
0010001
0010001
0001110
0000000
0000100
0001110
0010101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
0000100
0000100
0000110
0000000
1110011
0010101
0000110
0000000
0001100
0000110
0100101
0111011
0010101
0001110
0000000
0001110
0000000
0100001
0100001
0100001
0001110
==

soluce==
def jouer(self, nb, delai):
    for i in range(nb):
        self.affiche()
        self.tour()
        time.sleep(delai)

==






