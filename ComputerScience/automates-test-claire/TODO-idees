Remarques de Mamadou:
--------------------
Dans le dossier scripts j'ai mis des scripts python pour la génération et la manipulation d'automates
fsm.py et lego.py sont les lib open source sur github https://github.com/qntm/greenery que j'utilise pour faire des calculs sur les automates

le script automaton.py est un wrapper autour de cette lib et elle contient une classe avec des méthodes pour créer des automates aléatoire ou à partir d'une expression régulière et des méthodes pour comparer des automates et vérifier des propriétés

==========================================
A discuter avec Mamadou et Dominique
-----------------

Viewer/editeur

état normal -> état non-final
Transition - changer Transition -> changer l'étiquette de la transition

Quand je renomme l'état je n'arrive plus à faire des transistions

J'ai changé réponse acceptable

dans le multistep où il faut dessiner un automate, est-ce une comparaison d'égalité ou d'équivalence??

=======
Dans editor. pl j'ai ajouté des consignes pour dessiner l'autoamtes

========
Questions sur les numéros d'activées -- ok réglé

========
Syntaxe pour donner des automates fixés? pas juste à dessiner



==========================================
Idées d'exo
------------
Vérifier et ajuster si besoin:
+ properties.pl
+ recognition.pl

Exercices à concevoir:
+ TD1 exo 3 dans la continuitéé de prééfixe suffixe facteur qui sont fait --> voir td1-exemples-auto.pl à completer
+ automate des positions --> voir exo-egalité-auto.pl pour le garder en mode comparaison simple. Chercher dans les scripts de mamadou pour le fonctionnement des expression régulières
+ produit d'automates simples
+ minimisation --> voir td-minimisation.pl et exo-egalité-auto.pl
    automate minimal et simple vérification
    étapes de l'algo de Moore en donnant les classes d'équivalences à chaque niveau
+ QCM reg/non-reg


