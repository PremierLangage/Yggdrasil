Remarques de Mamadou:
--------------------
Dans le dossier scripts j'ai mis des scripts python pour la génération et la manipulation d'automates
fsm.py et lego.py sont les lib open source sur github https://github.com/qntm/greenery que j'utilise pour faire des calculs sur les automates

le script automaton.py est un wrapper autour de cette lib et elle contient une classe avec des méthodes pour créer des automates aléatoire ou à partir d'une expression régulière et des méthodes pour comparer des automates et vérifier des propriétés

==========================================
A discuter avec Mamadou et Dominique
-----------------

=======
23/04 -- automate inifini - reformuler

27/04 -- supprimer etiquette devrait être supprimer transition. J'ai changé dans mon hack.js -- à harmoniser avec Mamdou
29/04 -- encore des bugs dans le renommage d'état -- pb avec les transitions -- tester mais je pense que c'est bon maintenant
29/04 -- pb d'affichage des automates enoncéé dans certains exos --> dark mode de Chrome

8/5 - est-ce que le format texte des automates a besoin d'accepter des transitions depuis/vers plusieurs états.  en l'état le nom d'un état ne peut pas contenir de virgule

09/05 -- dans le mode same_as on demande une string_solution pour faire la comparaison. il a pas l'air de vouloir considerer solution à la place. Il faudra regarder d'où ça vient mais ça peut être à cause du viewer de solution

=========
parse -> construit des exemples cf la documentation de mamadou dans automaton
========

A ajuster:
+ Autoriser les automates sans états finaux sans transition etc
+ Le viewer ne gere pas encore les noms d'état avec des ,

A voir?
+ Dans from_regex_nd et dans les exo positions, repasser à des noms meaningful quand le renommage des états sera plus smooth dans l'éditeur

==========================================
Idées d'exo
------------
Vérifier et ajuster si besoin:
+ properties.pl
+ recognition.pl


Exercices à concevoir: --attendre la nouvelle lib pour l'ismorphisme
+ automate des positions --> voir exo-egalité-auto.pl pour le garder en mode comparaison simple. Chercher dans les scripts de mamadou pour le fonctionnement des expression régulières
+ produit d'automates simples
+ minimisation --> voir td-minimisation.pl 
    automate minimal et simple vérification = ok
    étapes de l'algo de Moore en donnant les classes d'équivalences à chaque niveau à voir
+ QCM reg/non-reg


==============

Afficher image

toto =$ fichierimahe.png
text==
![alter]({{toto}})
==



<img src="{{ toto }}" style=" y a du style !" >



 /* L'ORDRE DES MEDIA QUERIES EST IMPORTANT IL FAUT METTRE CELUI QUI COUVRE LE PLUS D'ECRANS EN PREMIER (LE DERNIER) */
@media screen and (max-width: 576px) { /* css appliqué sur les téléphones */
  
}

@media screen and (max-width: 768px) { /* css appliqué sur les tablettes */
  
}

@media screen and (max-width: 992px) { /* css appliqué sur les pc */
  
}

@media screen and (max-width: 1200px) { /* css appliqué sur les grands écrans */
  
}
pour votre image vous devez lui donner une largeur fixé (voire 100% si c'est ce que vous voulez) et une  hauteur fixé sur les différents targets
/* example sur les écrans <= tablettes */
@media screen and (max-width: 768px) {
   img {
     height: 320px;
     width: 100%;
     object-fit: cover; /* important pour avoir une image centrée */
   }
}

















