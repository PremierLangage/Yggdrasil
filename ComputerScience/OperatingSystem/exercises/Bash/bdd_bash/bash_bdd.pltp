#*****************************************************************************
#  Copyright (C) 2020 Nicolas Borie <nicolas dot borie at univ-eiffel . fr>
#
#  Distributed under the terms of the GNU General Public License (GPL)
#
#    This code is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    General Public License for more details.
#
#  The full text of the GPL is available at:
#
#                  http://www.gnu.org/licenses/
#*****************************************************************************

author=Nicolas Borie
title=Base de données primitive en bash

introduction==
Un fichier **MJC.txt** a été placé dans votre répertoire courant de travail. 
Ce fichier est structuré de manière très sérieuse en ligne. Chaque ligne correspond à
un membre de la MJC(Maison des Jeunes et de la Culture) de la capitale de la Syldavie. 
Chaque ligne suit la structure suivante :   
   
**id:prénom:nom:age:activité lundi,activité mardi,...,activité dimanche:jour:mois:année**   
   
À titre d'exemple, la première ligne du fichier est ainsi :   
   
**12137916:Daniel:Leroux:31:Theatre,,,,,,:12:Jun:2017**   
   
**Daniel Leroux** est donc le membre **12137916** de la MJC. Il a **31** ans et ne pratique que 
le **théâtre** le lundi ; les autres jours de la semaine, Daniel ne suit aucune activité. 
Daniel est membre de la MJC depuis le **12 Juin 2017**.

Rappels pour cette salve d'exercices :
======================================

    grep -e "MOTIF REGEXP" [fichier ou stdin]
`grep` permet de selectionner des lignes contenant
un certain MOTIF sous forme d'expression régulière (-v inverse la sélection 
et donc affiche les lignes qui ne contiennent pas le MOTIF).

    cut -d 'CHAR' -f ENTIER1, ENTIER2, ... , ENTIERn [fichier ou stdin]
`cut` permet de selectionner une ou plusieurs colonne dans un fichier 
strcuturé par lignes où les déélimiteurs sont spécifié par CHAR et les 
numéros de colonne par ENTIER1, ENTIER2, etc. La première colonne porte 
le numéro 1.

    wc -[l|c|w] [fichier ou stdin]
Word Count `wc` compte le nombre de caractères, de mots et de lignes dans 
le fichier en argument ou l'entrée standard. Attention, si l'argument est 
un fichier, le nom de l'argument est béguayé sur la sortie standard.

    sed -e "s/ANCIEN MOTIF/NOUVEAU MOTIF/g" [fichier ou stdin]
`sed` et sa fonction s pour substitution avec paramètre g va cherche TOUTES(g) 
les occurences de l'ANCIEN MOTIF (REGEXP) et les transformer(s) en une 
occurence du NOUVEAU MOTIF. `sed` oppère son travail sur l'entrée standard 
ou bien un fichier spécifié en argument.
==

# Size of the bdd : number of lines of the MJC.txt file
@ /ComputerScience/OperatingSystem/exercises/Bash/bdd_bash/bdd_size.pl

# Size of a given family
@ /ComputerScience/OperatingSystem/exercises/Bash/bdd_bash/family_size.pl

# Activities of a people given by id


# List ages of all people with given last name or/and first name 

# Namesake occurence counting
@ /ComputerScience/OperatingSystem/exercises/Bash/bdd_bash/namesake_count.pl

# List availlable activity of a given day
@ /ComputerScience/OperatingSystem/exercises/Bash/bdd_bash/activity_days.pl


